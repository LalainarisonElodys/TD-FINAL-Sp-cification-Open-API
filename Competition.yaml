openapi: 3.0.3
info:
  title: Football Competition 
  version: '1.0.0'
servers:
  - url: https://localhost.football-competition.com

paths:
  /competitions:
    get:
      summary: Get a list of competitions
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          required: true
          description: The page number 
        - in: query
          name: pageSize
          schema:
            type: integer
          required: true
          description: The number of items 
      responses:
        200:
          description: The list of competitions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Competition'
    post:
      summary: Create a new competition
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Competition'
      responses:
        201:
          description: Competition created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Competition'

  /teams:
    get:
      summary: Get a list of teams
      parameters:
        - in: query
          name: teamName
          schema:
            type: string
          required: false
          description: Filter teams by name
        - in: query
          name: page
          schema:
            type: integer
          required: true
          description: The page number 
        - in: query
          name: pageSize
          schema:
            type: integer
          required: true
          description: The number of items for each page
      responses:
        200:
          description: The list of teams
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Team'
    post:
      summary: Create  new team
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
      responses:
        201:
          description: Team created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'

  /teams/{teamId}/competitions:
    post:
      summary: Associate the team with the competitions
      parameters:
        - in: path
          name: teamId
          schema:
            type: string
          required: true
          description: The Id of the team
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CompetitionIdentifier'
      responses:
        200:
          description: Competitions associated 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'

  /teams/{teamId}/players:
    get:
      summary: Get all list of players in a team
      parameters:
        - in: path
          name: teamId
          schema:
            type: string
          required: true
          description: The ID of the team
        - in: query
          name: playerName
          schema:
            type: string
          required: false
          description: Filter players by name
        - in: query
          name: page
          schema:
            type: integer
          required: true
          description: The page number 
        - in: query
          name: pageSize
          schema:
            type: integer
          required: true
          description: The number of items for each page
      responses:
        200:
          description: All list of players
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Player'

  /players:
    post:
      summary: Create a new player
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Player'
      responses:
        201:
          description: Player created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'

  /teams/{teamId}/players/associate:
    post:
      summary: Associate a players with team
      parameters:
        - in: path
          name: teamId
          schema:
            type: string
          required: true
          description: The Id of the team
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/PlayerIdentifier'
      responses:
        200:
          description: Players associated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'

components:
  schemas:
    Competition:
      type: object
      properties:
        name:
          type: string
          example: LIGA
        location:
          type: string
          example: SPAIN

    Team:
      type: object
      properties:
        name:
          type: string
        slogan:
          type: string
        competitions:
          type: array
          items:
            $ref: '#/components/schemas/Competition'
        players:
          type: array
          items:
            $ref: '#/components/schemas/Player'

    Player:
      type: object
      properties:
        name:
          type: string
        number:
          type: integer
        preferredFoot:
          type: string
          enum: [Left, Right]

    CompetitionIdentifier:
      type: object
      properties:
        id:
          type: string

    PlayerIdentifier:
      type: object
      properties:
        id:
          type: string
